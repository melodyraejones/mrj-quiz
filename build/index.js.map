{"version":3,"file":"index.js","mappings":"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","sources":["webpack://mrj-quiz/./src/MultiLineInput.js","webpack://mrj-quiz/./src/index.css","webpack://mrj-quiz/external window [\"wp\",\"blockEditor\"]","webpack://mrj-quiz/external window [\"wp\",\"blocks\"]","webpack://mrj-quiz/external window [\"wp\",\"components\"]","webpack://mrj-quiz/external window [\"wp\",\"element\"]","webpack://mrj-quiz/webpack/bootstrap","webpack://mrj-quiz/webpack/runtime/compat get default export","webpack://mrj-quiz/webpack/runtime/define property getters","webpack://mrj-quiz/webpack/runtime/hasOwnProperty shorthand","webpack://mrj-quiz/webpack/runtime/make namespace object","webpack://mrj-quiz/./src/index.js"],"sourcesContent":["import { useState } from \"@wordpress/element\";\r\nimport { BaseControl } from \"@wordpress/components\";\r\n\r\nconst MultiLineInput = ({ label, value, onChange, help }) => {\r\n  const [inputValue, setInputValue] = useState(value.join(\"\\n\"));\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setInputValue(newValue);\r\n    const newValuesArray = newValue\r\n      .split(\"\\n\")\r\n      .map((v) => v.trim())\r\n      .filter((v) => v);\r\n    onChange(newValuesArray);\r\n  };\r\n\r\n  return (\r\n    <BaseControl label={label} help={help}>\r\n      <textarea\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        rows={10}\r\n        cols={50}\r\n        className=\"components-textarea-control__input\"\r\n      />\r\n    </BaseControl>\r\n  );\r\n};\r\n\r\nexport default MultiLineInput;\r\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./index.css\";\r\nimport { MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\";\r\nimport {\r\n  TextControl,\r\n  Flex,\r\n  FlexBlock,\r\n  FlexItem,\r\n  Button,\r\n  SelectControl,\r\n} from \"@wordpress/components\";\r\nimport { registerBlockType } from \"@wordpress/blocks\";\r\nimport MultiLineInput from \"./MultiLineInput\";\r\n\r\nconst personalityTypes =\r\n  typeof mrjplugin_data !== \"undefined\" &&\r\n  Array.isArray(mrjplugin_data.personality_types)\r\n    ? mrjplugin_data.personality_types.map((type) => ({\r\n        label: type,\r\n        value: type,\r\n      }))\r\n    : [];\r\n\r\nregisterBlockType(\"mrjplugin/quiz\", {\r\n  title: \"What's Your Wisdom Profile?\",\r\n  icon: \"smiley\",\r\n  category: \"common\",\r\n  attributes: {\r\n    questions: {\r\n      type: \"array\",\r\n      default: [\r\n        {\r\n          question: \"\",\r\n          choices: [\r\n            {\r\n              text: \"\",\r\n              personalityType: \"\",\r\n              imageUrl: \"\",\r\n            },\r\n          ],\r\n          imageUrl: \"\",\r\n        },\r\n      ],\r\n    },\r\n    personalityTypes: {\r\n      type: \"array\",\r\n      default: [],\r\n    },\r\n  },\r\n  edit: EditComponent,\r\n  save: function () {\r\n    return null;\r\n  },\r\n});\r\n\r\nfunction EditComponent({ attributes, setAttributes }) {\r\n  const { questions, personalityTypes } = attributes;\r\n\r\n  function addQuestion() {\r\n    const newQuestions = [\r\n      ...questions,\r\n      {\r\n        question: \"\",\r\n        choices: [{ text: \"\", personalityType: \"\", imageUrl: \"\" }],\r\n        imageUrl: \"\",\r\n      },\r\n    ];\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function addChoice(questionIndex) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].choices.push({\r\n      text: \"\",\r\n      personalityType: \"\",\r\n      imageUrl: \"\",\r\n    });\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function removeChoice(questionIndex, choiceIndex) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].choices = newQuestions[\r\n      questionIndex\r\n    ].choices.filter((_, idx) => idx !== choiceIndex);\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function updateQuestionText(questionText, index) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].question = questionText;\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function onSelectQuestionImage(media, questionIndex) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].imageUrl = media.url;\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function updateChoiceText(questionIndex, choiceIndex, newText) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].choices[choiceIndex].text = newText;\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function updatePersonalityType(questionIndex, choiceIndex, newType) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].choices[choiceIndex].personalityType = newType;\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function onSelectChoiceImage(media, questionIndex, choiceIndex) {\r\n    const newQuestions = [...questions];\r\n    newQuestions[questionIndex].choices[choiceIndex].imageUrl = media.url;\r\n    setAttributes({ questions: newQuestions });\r\n  }\r\n\r\n  function updatePersonalityTypes(newTypes) {\r\n    setAttributes({ personalityTypes: newTypes });\r\n  }\r\n\r\n  return (\r\n    <div className=\"mrj-quiz-edit-block\">\r\n      <MultiLineInput\r\n        label=\"Personality Types\"\r\n        help=\"Enter personality types, one per line.\"\r\n        value={personalityTypes}\r\n        onChange={updatePersonalityTypes}\r\n      />\r\n      {questions.map((question, questionIndex) => (\r\n        <div key={questionIndex}>\r\n          <TextControl\r\n            value={question.question}\r\n            onChange={(text) => updateQuestionText(text, questionIndex)}\r\n            label={`Question ${questionIndex + 1}`}\r\n          />\r\n          <MediaUploadCheck>\r\n            <MediaUpload\r\n              onSelect={(media) => onSelectQuestionImage(media, questionIndex)}\r\n              allowedTypes={[\"image\"]}\r\n              render={({ open }) => (\r\n                <Button onClick={open} isSecondary>\r\n                  {question.imageUrl ? \"Change Image\" : \"Upload Image\"}\r\n                </Button>\r\n              )}\r\n            />\r\n          </MediaUploadCheck>\r\n          {question.imageUrl && (\r\n            <img\r\n              src={question.imageUrl}\r\n              alt={`Uploaded for question ${questionIndex + 1}`}\r\n            />\r\n          )}\r\n          {question.choices.map((choice, choiceIndex) => (\r\n            <Flex key={choiceIndex}>\r\n              <FlexBlock>\r\n                <TextControl\r\n                  value={choice.text}\r\n                  onChange={(newText) =>\r\n                    updateChoiceText(questionIndex, choiceIndex, newText)\r\n                  }\r\n                  label=\"Choice Text\"\r\n                />\r\n                <SelectControl\r\n                  label=\"Personality Type\"\r\n                  value={choice.personalityType}\r\n                  options={personalityTypes.map((type) => ({\r\n                    label: type,\r\n                    value: type,\r\n                  }))}\r\n                  onChange={(newType) =>\r\n                    updatePersonalityType(questionIndex, choiceIndex, newType)\r\n                  }\r\n                />\r\n                <MediaUploadCheck>\r\n                  <MediaUpload\r\n                    onSelect={(media) =>\r\n                      onSelectChoiceImage(media, questionIndex, choiceIndex)\r\n                    }\r\n                    allowedTypes={[\"image\"]}\r\n                    render={({ open }) => (\r\n                      <Button onClick={open} isSecondary>\r\n                        {choice.imageUrl ? \"Change Image\" : \"Upload Image\"}\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </MediaUploadCheck>\r\n                {choice.imageUrl && (\r\n                  <img\r\n                    src={choice.imageUrl}\r\n                    alt={`Image for choice ${choiceIndex + 1} of question ${\r\n                      questionIndex + 1\r\n                    }`}\r\n                  />\r\n                )}\r\n              </FlexBlock>\r\n              <FlexItem>\r\n                <Button\r\n                  isSecondary\r\n                  onClick={() => removeChoice(questionIndex, choiceIndex)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </FlexItem>\r\n            </Flex>\r\n          ))}\r\n          <Button\r\n            className=\"choice-btn\"\r\n            onClick={() => addChoice(questionIndex)}\r\n            isSecondary\r\n          >\r\n            Add Another Choice\r\n          </Button>\r\n          <hr className=\"next-question-line\" />\r\n        </div>\r\n      ))}\r\n      <Button onClick={addQuestion} isPrimary>\r\n        Add Question\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useState","BaseControl","MultiLineInput","label","value","onChange","help","inputValue","setInputValue","join","handleChange","event","newValue","target","newValuesArray","split","map","v","trim","filter","createElement","rows","cols","className","MediaUpload","MediaUploadCheck","TextControl","Flex","FlexBlock","FlexItem","Button","SelectControl","registerBlockType","personalityTypes","mrjplugin_data","Array","isArray","personality_types","type","title","icon","category","attributes","questions","default","question","choices","text","personalityType","imageUrl","edit","EditComponent","save","setAttributes","addQuestion","newQuestions","addChoice","questionIndex","push","removeChoice","choiceIndex","_","idx","updateQuestionText","questionText","index","onSelectQuestionImage","media","url","updateChoiceText","newText","updatePersonalityType","newType","onSelectChoiceImage","updatePersonalityTypes","newTypes","key","onSelect","allowedTypes","render","open","onClick","isSecondary","src","alt","choice","options","isPrimary"],"sourceRoot":""}